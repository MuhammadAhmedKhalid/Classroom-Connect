@model Classroom.Models.Assignment

<h1>@ViewData["Title"]</h1>

<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input asp-for="ClassId" type="hidden" />

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Instructions" class="control-label"></label>
                <textarea asp-for="Instructions" class="form-control" style="height: 100px;"></textarea>
                <span asp-validation-for="Instructions" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DueDate" class="control-label"></label>
                <input asp-for="DueDate" class="form-control" type="datetime-local" />
                <span asp-validation-for="DueDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CloseDate" class="control-label"></label>
                <input asp-for="CloseDate" class="form-control" type="datetime-local" readonly />
                <span asp-validation-for="CloseDate" class="text-danger"></span>
            </div>

            <div class="form-group mt-2 mb-2">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const dueDateInput = document.getElementById('DueDate');
            const closeDateInput = document.getElementById('CloseDate');

            if (dueDateInput.value) {
                closeDateInput.readOnly = false;
            } else {
                closeDateInput.readOnly = true;
            }

            dueDateInput.addEventListener('change', function () {
                closeDateInput.readOnly = !this.value;
                if (!this.value) {
                    closeDateInput.value = '';
                }
            });
        });
    </script>
}
