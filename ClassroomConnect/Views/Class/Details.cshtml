@using Microsoft.AspNetCore.Identity
@using Classroom.Models

@inject UserManager<ApplicationUser> UserManager

@model Classroom.Models.ViewModels.ClassDetailsVM

@{
    ViewData["Title"] = Model.Class?.Name ?? "Class Details";
    var currentUser = await UserManager.GetUserAsync(User);
    var isCreator = Model.Class?.CreatedById == currentUser?.Id;
}

<h1 class="mb-4">@ViewData["Title"]</h1>

<ul class="nav nav-tabs mb-3">
    <li class="nav-item">
        <a class="nav-link active" id="info-tab" data-bs-toggle="tab" href="#info" role="tab" aria-controls="info" aria-selected="true">Class Information</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="members-tab" data-bs-toggle="tab" href="#members" role="tab" aria-controls="members" aria-selected="false">Class Members 
            @* <span class="badge bg-primary">@Model.ClassMembers?.Count</span> *@
            </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="assignments-tab" data-bs-toggle="tab" href="#assignments" role="tab" aria-controls="assignments" aria-selected="false">Assignments</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="quizzes-tab" data-bs-toggle="tab" href="#quizzes" role="tab" aria-controls="quizzes" aria-selected="false">Quizzes</a>
    </li>
</ul>

<div class="tab-content">
    <div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
        <div class="class-section p-4 border rounded">
            <h2 class="section-header">Class Information</h2>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Class.Name)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Class.Name)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Class.Description)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Class.Description)
                </dd>
                @if (isCreator)
                {
                    <dt class="col-sm-2">Class Code</dt>
                    <dd class="col-sm-10">
                        <div class="input-group" style="max-width: 300px;">
                            <input type="text" class="form-control" id="classCodeInput" value="@Model.Class?.ClassCode" readonly>
                            <button class="btn btn-outline-secondary" type="button" id="copyButton">
                                <i class="bi bi-clipboard"></i> Copy
                            </button>
                        </div>
                        <small class="text-muted">Use this code to join the class</small>
                    </dd>
                }
                <dt class="col-sm-2">Created On</dt>
                <dd class="col-sm-10">
                    @Model.Class?.CreatedAt.ToString()
                </dd>
            </dl>

            @if (isCreator)
            {
                <div class="mt-3">
                    <a asp-action="Edit" asp-route-id="@Model.Class?.Id" class="btn btn-primary">Edit Class</a>
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>
            }
        </div>
    </div>

    <div class="tab-pane fade" id="members" role="tabpanel" aria-labelledby="members-tab">
        <div class="class-section p-4 border rounded">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="section-header">Class Members</h2>
                <span class="badge bg-primary">@Model.ClassMembers?.Count members</span>
            </div>
            <hr />

            @if (Model.ClassMembers?.Any() == true)
            {
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Joined Date</th>
                            <th>Role</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var member in Model.ClassMembers)
                        {
                            <tr>
                                <td>
                                    @member.User.Name
                                    @(member.User == currentUser ? " (Me)" : "")
                                    @(member.User.Id == Model.Class?.CreatedById ? " (Creator)" : "")
                                </td>
                                <td>@member.User.Email</td>
                                <td>@member.JoinedAt.ToString("MMM dd, yyyy")</td>
                                <td>@(member.User.Id == Model.Class?.CreatedById ? "Instructor" : "Student")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="alert alert-info">
                    No members have joined this class yet.
                </div>
            }
        </div>
    </div>

    <div class="tab-pane fade" id="assignments" role="tabpanel" aria-labelledby="assignments-tab">
        <div class="class-section p-4 border rounded">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="section-header">Assignments</h2>
                @if (isCreator)
                {
                    <a 
                        asp-controller="Assignment" asp-action="Create"
                        asp-route-classId="@Model.Class?.Id" class="btn btn-sm btn-success">
                        <i class="bi bi-plus"></i> New Assignment
                    </a>
                }
            </div>
            <hr />

            @if (Model.Assignments?.Any() == true)
            {
                <div class="list-group">
                    @foreach (var assignment in Model.Assignments)
                    {
                        <a asp-controller="Assignment" asp-action="Details" asp-route-id="@assignment.Id"
                           class="list-group-item list-group-item-action">
                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1">@assignment.Title</h5>
                                <small>Due Date: @assignment.DueDate.ToString()</small>
                            </div>
                            <p class="mb-1">@assignment.Instructions</p>
                            <small>Posted: @assignment.PostedAt.ToString()</small>
                        </a>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    No assignments have been posted yet.
                </div>
            }
        </div>
    </div>

    <div class="tab-pane fade" id="quizzes" role="tabpanel" aria-labelledby="quizzes-tab">
        <div class="class-section p-4 border rounded">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="section-header">Quizzes</h2>
                @if (isCreator)
                {
                    <a 
                        @* asp-controller="Quizzes" asp-action="Create" *@
                        asp-route-classId="@Model.Class?.Id" class="btn btn-sm btn-success">
                        <i class="bi bi-plus"></i> New Quiz
                    </a>
                }
            </div>
            <hr />

            @* @if (Model.Quizzes?.Any() == true) *@
            @if (!true)
            {
                @*<div class="list-group">
                    @foreach (var quiz in Model.Quizzes)
                    {
                        <a asp-controller="Quizzes" asp-action="Details" asp-route-id="@quiz.Id"
                           class="list-group-item list-group-item-action">
                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1">@quiz.Title</h5>
                                <span class="badge bg-@(quiz.IsPublished ? "success" : "warning")">
                                    @(quiz.IsPublished ? "Published" : "Draft")
                                </span>
                            </div>
                            <p class="mb-1">@quiz.Description</p>
                            <div class="d-flex justify-content-between">
                                <small>Questions: @quiz.Questions.Count</small>
                                <small>Available: @quiz.AvailableFrom?.ToString("MMM dd, yyyy") - @quiz.AvailableTo?.ToString("MMM dd, yyyy")</small>
                            </div>
                        </a>
                    }
                </div>*@
            }
            else
            {
                <div class="alert alert-info">
                    No quizzes have been created yet.
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('copyButton').addEventListener('click', function() {
            const classCodeInput = document.getElementById('classCodeInput');
            classCodeInput.select();
            document.execCommand('copy');

            // Change button appearance temporarily
            const originalText = this.innerHTML;
            this.innerHTML = '<i class="bi bi-check"></i> Copied!';
            this.classList.remove('btn-outline-secondary');
            this.classList.add('btn-success');

            // Revert after 2 seconds
            setTimeout(() => {
                this.innerHTML = originalText;
                this.classList.remove('btn-success');
                this.classList.add('btn-outline-secondary');
            }, 2000);
        });

        // Initialize Bootstrap Tabs (optional, but good practice)
        var tabEl = document.querySelector('a[data-bs-toggle="tab"]')
        if (tabEl) {
            tabEl.addEventListener('show.bs.tab', function (event) {
                // event.target will be the newly activated tab
                // event.relatedTarget will be the previous active tab
            })
        }
    </script>
}