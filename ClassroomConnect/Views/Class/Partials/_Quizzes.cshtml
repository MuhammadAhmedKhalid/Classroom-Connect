@using Microsoft.AspNetCore.Identity
@using Classroom.Models

@inject UserManager<ApplicationUser> UserManager

@model Classroom.Models.ViewModels.ClassDetailsVM

@{
    var currentUser = await UserManager.GetUserAsync(User);
    var isCreator = Model.Class?.CreatedById == currentUser?.Id;
}

<div class="class-section p-4 border rounded">
    <div class="d-flex justify-content-between align-items-center">
        <h2 class="section-header">Quizzes</h2>
        <div class="d-flex align-items-center">
            <div class="me-3">
                <div class="mb-1">
                    <label for="quizSearchInput" class="form-label visually-hidden">Search Quizzes</label>
                </div>
                <input type="text" class="form-control form-control-sm" id="quizSearchInput" name="searchTerm" placeholder="Search quizzes...">
            </div>
            @if (isCreator)
            {
                <a asp-controller="Quiz" asp-action="Create" asp-route-classId="@Model.Class?.Id" class="btn btn-sm btn-success">
                    <i class="bi bi-plus"></i> New Quiz
                </a>
            }
        </div>
    </div>
    <hr />

    @if (Model.Quizzes?.Any() == true)
    {
        <div class="list-group" id="quizzesList">
            @foreach (var quiz in Model.Quizzes)
            {
                <a asp-controller="Quiz" asp-action="Details" asp-route-id="@quiz.Id"
                   class="list-group-item list-group-item-action quiz-item">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1 quiz-title">@quiz.Title</h5>
                        <small>
                            @if (!string.IsNullOrWhiteSpace(quiz.DueDate.ToString()))
                            {
                                <span>Due Date: @quiz.DueDate.ToString()<br /></span>
                            }
                            @if (!string.IsNullOrWhiteSpace(quiz.CloseDate.ToString()))
                            {
                                <span>Close Date: @quiz.CloseDate.ToString()</span>
                            }
                        </small>
                    </div>
                    <p class="mb-1 quiz-instructions">@quiz.Instructions</p>
                    <small>Posted: @quiz.PostedAt.ToString()</small>
                </a>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">
            No quizzes have been created yet.
        </div>
    }
</div>

<script>
    const quizSearchInput = document.getElementById('quizSearchInput');
    const quizzesList = document.getElementById('quizzesList');
    const quizItems = document.querySelectorAll('.quiz-item');

    quizSearchInput.addEventListener('input', function () {
        const searchTerm = this.value.toLowerCase();
        let hasMatches = false;

        quizItems.forEach(item => {
            const title = item.querySelector('.quiz-title').textContent.toLowerCase();
            const instructions = item.querySelector('.quiz-instructions').textContent.toLowerCase();
            const shouldShow = title.includes(searchTerm) || instructions.includes(searchTerm);
            item.style.display = shouldShow ? '' : 'none';
            
            if (shouldShow) {
                hasMatches = true;
            }
        });
    });
</script>