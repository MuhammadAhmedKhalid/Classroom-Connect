@model IEnumerable<Classroom.Models.ClassMember>

<div class="container">
    <!-- Desktop Header -->
    <div class="d-none d-md-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">@ViewData["Title"]</h1>
        <div class="d-flex align-items-center gap-3">
            @if (Model.Any())
            {
                <div class="search-container">
                    <input type="text" class="form-control" id="classSearchInput" placeholder="Search classes..." aria-label="Search classes">
                </div>
            }
            <a asp-action="Join" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Join New
            </a>
        </div>
    </div>

    <!-- Mobile Header -->
    <div class="d-flex d-md-none flex-column mb-4 gap-2">
        <h1 class="mb-0">@ViewData["Title"]</h1>
        <div class="d-flex flex-column flex-sm-row gap-2 w-100">
            @if (Model.Any())
            {
                <div class="search-container flex-grow-1">
                    <input type="text" class="form-control" id="classSearchInputMobile" placeholder="Search classes..." aria-label="Search classes">
                </div>
            }
            <a asp-action="Join" class="btn btn-primary flex-shrink-0">
                <i class="bi bi-plus-circle"></i> <span class="d-none d-sm-inline">Join New</span>
                <span class="d-inline d-sm-none">Join</span>
            </a>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="classesContainer">
            @foreach (var item in Model)
            {
                <div class="col class-card">
                    <div class="card h-100 shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title class-name">@item.Class?.Name</h5>
                            <p class="card-text text-muted class-description" style="display: -webkit-box; -webkit-line-clamp: 5; -webkit-box-orient: vertical; overflow: hidden;">
                                @(string.IsNullOrEmpty(item.Class?.Description) ? "No description" : item.Class?.Description)
                            </p>
                        </div>
                        <div class="card-footer bg-transparent border-top-0">
                            <!-- Desktop Button -->
                            <div class="d-none d-md-flex justify-content-end gap-2">
                                <a asp-controller="Class" asp-action="Details" asp-route-id="@item.ClassId" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye"></i> View
                                </a>
                            </div>

                            <!-- Mobile Button -->
                            <div class="d-flex d-md-none justify-content-end gap-2">
                                <a asp-controller="Class" asp-action="Details" asp-route-id="@item.ClassId" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye"></i> <span class="d-none d-sm-inline">View</span>
                                </a>
                            </div>

                            <small class="text-muted">
                                Join Date: @item.JoinedAt.ToString("MMM dd, yyyy")
                            </small>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">
            No classes found. Would you like to <a asp-action="Join">join a class</a>?
        </div>
    }
</div>

@section Scripts {
    @if (Model.Any())
    {
        <script>
            // Shared search function
            function setupSearch(inputId) {
                const searchInput = document.getElementById(inputId);
                if (searchInput) {
                    searchInput.addEventListener('input', function() {
                        const searchTerm = this.value.toLowerCase();
                        const classCards = document.querySelectorAll('.class-card');
                        let hasMatches = false;

                        classCards.forEach(card => {
                            const name = card.querySelector('.class-name').textContent.toLowerCase();
                            const description = card.querySelector('.class-description').textContent.toLowerCase();
                            const shouldShow = name.includes(searchTerm) || description.includes(searchTerm);
                            card.style.display = shouldShow ? 'block' : 'none';

                            if (shouldShow) {
                                hasMatches = true;
                            }
                        });

                        const noMatchesMessage = document.getElementById('noMatchesMessage');
                        if (!hasMatches && classCards.length > 0) {
                            if (!noMatchesMessage) {
                                const message = document.createElement('div');
                                message.id = 'noMatchesMessage';
                                message.className = 'alert alert-info col-12';
                                message.textContent = 'No classes match your search.';
                                document.getElementById('classesContainer').appendChild(message);
                            }
                        } else if (noMatchesMessage) {
                            noMatchesMessage.remove();
                        }
                    });
                }
            }

            // Initialize both search inputs
            setupSearch('classSearchInput');
            setupSearch('classSearchInputMobile');
        </script>
    }
}

<style>
    /* Desktop styles (unchanged) */
    .search-container {
        width: 250px;
    }

    /* Mobile-specific improvements */
    @@media (max-width: 767.98px) {
        .search-container {
            width: 100%;
        }

        .card-footer .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.8rem;
        }

        .card-title {
            font-size: 1.1rem;
        }

        .card-text {
            font-size: 0.9rem;
        }

        small.text-muted {
            font-size: 0.8rem;
        }
    }
</style>